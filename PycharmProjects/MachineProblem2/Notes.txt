if(counterName.equals("gshare")){
		int GHRbits = Integer.parseInt(args[2]);
		int GHR = 0;
		StringBuilder sb2 = new StringBuilder();
		sb2.append('1');
		for(int i = 1; i < GHRbits; i++) sb2.append('0');
		String temp = sb2.toString();
		int mask1 = Integer.parseInt(temp, 2);
		StringBuilder sb3 = new StringBuilder();
		sb2.append('0');
		for(int i = 1; i < GHRbits; i++) sb2.append('1');
		String temp2 = sb2.toString();
		int mask2 = Integer.parseInt(temp2, 2);
		HashMap<Integer, Integer> counter1 = new HashMap<>();
		for(int i = 0; i < Math.pow(2, counterBit); i++) counter1.put(i, 4);
		for(int i = 0; i < actual.size(); i++){
			int k = counterBit;
			int decimalAddress = Integer.parseInt(PC.get(i), 16);
			decimalAddress = decimalAddress >> 2;
			StringBuilder sb = new StringBuilder();
        		while(k > 0) {
            			sb.append((decimalAddress & 1));
            			decimalAddress = decimalAddress >> 1;
            			k--;
        		}
        		String ab = sb.reverse().toString();
        		int index = Integer.parseInt(ab, 2);
			index = index ^ GHR;
			GHR = GHR >> 1;
			if(counter1.get(index) > 3) prediction = 't';
			else prediction = 'n';
			if(actual.get(i).charAt(0) == prediction) correct++;
			if(actual.get(i).charAt(0) == 't') {
				GHR = GHR | mask1;
				if (counter1.get(index) != 7) counter1.put(index, counter1.get(index) + 1);
			}
			else {
				GHR = GHR & mask2;
				if(counter1.get(index) != 0) counter1.put(index, counter1.get(index) - 1);
			}
		}
		int miss = actual.size() - correct;
		double rate = miss * 100.00 / actual.size();
		System.out.println("COMMAND");
		System.out.println("./sim gshare " + counterBit + " " + GHRbits + " " + file);
		System.out.println("OUTPUT");
		System.out.println("number of predictions:          " + actual.size());
		System.out.println("number of mispredictions:       " + miss);
		System.out.println("misprediction rate:             " + String.format("%.2f", rate) + "%");
		System.out.println("FINAL GSHARE CONTENTS");
		for(int i = 0; i < counter1.size(); i++){
			System.out.println(i + "      " + counter1.get(i));
		}

	}
